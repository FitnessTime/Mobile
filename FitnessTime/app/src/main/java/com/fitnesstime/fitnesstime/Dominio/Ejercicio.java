package com.fitnesstime.fitnesstime.Dominio;

import java.util.List;
import com.fitnesstime.fitnesstime.DAO.DaoSession;
import de.greenrobot.dao.DaoException;

import com.fitnesstime.fitnesstime.DAO.EjercicioDao;
import com.fitnesstime.fitnesstime.DAO.MarcaDao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "EJERCICIO".
 */
public class Ejercicio implements DomainEntity {

    private Long id;
    private Long idWeb;
    private Integer versionWeb;
    private Integer version;
    /** Not-null value. */
    private String nombre;
    private boolean estaSincronizado;
    private String diaDeLaSemana;
    private Integer series;
    private Integer repeticiones;
    private Integer tiempoActivo;
    private Integer tiempoDescanso;
    private Boolean nombreCambio;
    private Boolean diaDeLaSemanaCambio;
    private Boolean seriesCambio;
    private Boolean repeticionesCambio;
    private Boolean tiempoActivoCambio;
    private Boolean tiempoDescansoCambio;
    private boolean eliminada;
    private boolean esDeCarga;
    private long rutinaId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient EjercicioDao myDao;

    private List<Marca> marcaList;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Ejercicio() {
        this.nombreCambio = false;
        this.diaDeLaSemanaCambio = false;
        this.seriesCambio = false;
        this.repeticionesCambio = false;
        this.tiempoDescansoCambio = false;
        this.tiempoActivoCambio = false;
        this.version = 0;
        this.versionWeb = 0;
    }

    public Ejercicio(Long id) {
        this.id = id;
    }

    public Ejercicio(Long id, Long idWeb, Integer versionWeb, Integer version, String nombre, boolean estaSincronizado, String diaDeLaSemana, Integer series, Integer repeticiones, Integer tiempoActivo, Integer tiempoDescanso, Boolean nombreCambio, Boolean diaDeLaSemanaCambio, Boolean seriesCambio, Boolean repeticionesCambio, Boolean tiempoActivoCambio, Boolean tiempoDescansoCambio, boolean eliminada, boolean esDeCarga, long rutinaId) {
        this.id = id;
        this.idWeb = idWeb;
        this.versionWeb = versionWeb;
        this.version = version;
        this.nombre = nombre;
        this.estaSincronizado = estaSincronizado;
        this.diaDeLaSemana = diaDeLaSemana;
        this.series = series;
        this.repeticiones = repeticiones;
        this.tiempoActivo = tiempoActivo;
        this.tiempoDescanso = tiempoDescanso;
        this.nombreCambio = nombreCambio;
        this.diaDeLaSemanaCambio = diaDeLaSemanaCambio;
        this.seriesCambio = seriesCambio;
        this.repeticionesCambio = repeticionesCambio;
        this.tiempoActivoCambio = tiempoActivoCambio;
        this.tiempoDescansoCambio = tiempoDescansoCambio;
        this.eliminada = eliminada;
        this.esDeCarga = esDeCarga;
        this.rutinaId = rutinaId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getEjercicioDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getIdWeb() {
        return idWeb;
    }

    public void setIdWeb(Long idWeb) {
        this.idWeb = idWeb;
    }

    public Integer getVersionWeb() {
        return versionWeb;
    }

    public void setVersionWeb(Integer versionWeb) {
        this.versionWeb = versionWeb;
    }

    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    /** Not-null value. */
    public String getNombre() {
        return nombre;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public boolean getEstaSincronizado() {
        return estaSincronizado;
    }

    public void setEstaSincronizado(boolean estaSincronizado) {
        this.estaSincronizado = estaSincronizado;
    }

    public String getDiaDeLaSemana() {
        return diaDeLaSemana;
    }

    public void setDiaDeLaSemana(String diaDeLaSemana) {
        this.diaDeLaSemana = diaDeLaSemana;
    }

    public Integer getSeries() {
        return series;
    }

    public void setSeries(Integer series) {
        this.series = series;
    }

    public Integer getRepeticiones() {
        return repeticiones;
    }

    public void setRepeticiones(Integer repeticiones) {
        this.repeticiones = repeticiones;
    }

    public Integer getTiempoActivo() {
        return tiempoActivo;
    }

    public void setTiempoActivo(Integer tiempoActivo) {
        this.tiempoActivo = tiempoActivo;
    }

    public Integer getTiempoDescanso() {
        return tiempoDescanso;
    }

    public void setTiempoDescanso(Integer tiempoDescanso) {
        this.tiempoDescanso = tiempoDescanso;
    }

    public Boolean getNombreCambio() {
        return nombreCambio;
    }

    public void setNombreCambio(Boolean nombreCambio) {
        this.nombreCambio = nombreCambio;
    }

    public Boolean getDiaDeLaSemanaCambio() {
        return diaDeLaSemanaCambio;
    }

    public void setDiaDeLaSemanaCambio(Boolean diaDeLaSemanaCambio) {
        this.diaDeLaSemanaCambio = diaDeLaSemanaCambio;
    }

    public Boolean getSeriesCambio() {
        return seriesCambio;
    }

    public void setSeriesCambio(Boolean seriesCambio) {
        this.seriesCambio = seriesCambio;
    }

    public Boolean getRepeticionesCambio() {
        return repeticionesCambio;
    }

    public void setRepeticionesCambio(Boolean repeticionesCambio) {
        this.repeticionesCambio = repeticionesCambio;
    }

    public Boolean getTiempoActivoCambio() {
        return tiempoActivoCambio;
    }

    public void setTiempoActivoCambio(Boolean tiempoActivoCambio) {
        this.tiempoActivoCambio = tiempoActivoCambio;
    }

    public Boolean getTiempoDescansoCambio() {
        return tiempoDescansoCambio;
    }

    public void setTiempoDescansoCambio(Boolean tiempoDescansoCambio) {
        this.tiempoDescansoCambio = tiempoDescansoCambio;
    }

    public boolean getEliminada() {
        return eliminada;
    }

    public void setEliminada(boolean eliminada) {
        this.eliminada = eliminada;
    }

    public boolean getEsDeCarga() {
        return esDeCarga;
    }

    public void setEsDeCarga(boolean esDeCarga) {
        this.esDeCarga = esDeCarga;
    }

    public long getRutinaId() {
        return rutinaId;
    }

    public void setRutinaId(long rutinaId) {
        this.rutinaId = rutinaId;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Marca> getMarcaList() {
        if (marcaList == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            MarcaDao targetDao = daoSession.getMarcaDao();
            List<Marca> marcaListNew = targetDao._queryEjercicio_MarcaList(id);
            synchronized (this) {
                if(marcaList == null) {
                    marcaList = marcaListNew;
                }
            }
        }
        return marcaList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetMarcaList() {
        marcaList = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
